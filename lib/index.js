// Generated by CoffeeScript 1.7.1
var extend, getto, modelMixin;

getto = require('getto');

extend = function(obj, extensions) {
  var key, value, _results;
  _results = [];
  for (key in extensions) {
    value = extensions[key];
    _results.push(obj[key] = value);
  }
  return _results;
};

module.exports = modelMixin = function(_arg) {
  var methods, mixin, statics, _ref;
  _ref = _arg != null ? _arg : {}, statics = _ref.statics, methods = _ref.methods;
  if (statics == null) {
    statics = {};
  }
  if (methods == null) {
    methods = {};
  }
  mixin = function(target) {
    if (target == null) {
      return;
    }
    if ((target["static"] != null) && (target.method != null)) {
      target["static"](statics);
      target.method(methods);
    } else if (target.constructor === Object) {
      extend(getto(target), methods);
    } else {
      extend(target, statics);
      extend(target.prototype, methods);
    }
    return target;
  };
  extend(mixin, {
    statics: statics,
    methods: methods
  });
  return mixin;
};
